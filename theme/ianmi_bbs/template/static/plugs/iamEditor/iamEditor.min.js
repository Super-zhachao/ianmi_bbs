"use strict";
var _createClass = function () {
  function a(e, t) {
    for (var n = 0; n < t.length; n++) {
      var a = t[n];
      a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
    }
  }

  return function (e, t, n) {
    return t && a(e.prototype, t), n && a(e, n), e
  }
}();

function _classCallCheck(e, t) {
  if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
}

var IamEditor = function () {
  function e() {
    _classCallCheck(this, e), this.selection = window.getSelection()
  }

  return _createClass(e, [{
    key: "init", value: function () {
      var r = this;
      this.dom.setAttribute("contenteditable", !0), this.dom.addEventListener("keydown", function (e) {
        var t = r.getRange();
        if (t.commonAncestorContainer.parentNode.getAttribute("unit")) {
          var n = t.commonAncestorContainer;
          if (t.setStart(t.startContainer, 0), t.setEnd(t.endContainer, n.length), -1 == [37, 38, 39, 40].indexOf(e.keyCode) && t.commonAncestorContainer.parentNode.parentNode.removeChild(t.commonAncestorContainer.parentNode), 8 === e.keyCode) return !1
        }
        if (13 === e.keyCode) {
          var a = r.getRange().startOffset;
          document.execCommand("insertHTML", !1, "\n"), r.getRange().startOffset === a && document.execCommand("insertHTML", !1, "\n"), e.preventDefault()
        }
      }), this.dom.addEventListener("paste", function (e) {
        var t = e.clipboardData.getData("text/plain");
        document.execCommand("insertText", !1, t), e.preventDefault()
      }), this.dom.addEventListener("blur", function (e) {
        r._currentRange = r.selection.getRangeAt(0)
      }), document.addEventListener("click", function (e) {
        if (r.dom.contains(e.target) && e.target.getAttribute("unit")) {
          var t = r.getRange();
          t.selectNodeContents(e.target), t.setStart(t.startContainer, 0), t.setEnd(t.endContainer, 1)
        }
      })
    }
  }, {
    key: "getRange", value: function () {
      return this.selection.getRangeAt(0)
    }
  }, {
    key: "getBox", value: function (e) {
      this.dom = e, this.init()
    }
  }, {
    key: "focus", value: function () {
      if (this._currentRange) {
        var e = window.getSelection();
        e.removeAllRanges(), e.addRange(this._currentRange)
      }
      this.dom.focus()
    }
  }, {
    key: "insertHTML", value: function (e) {
      this.focus(), document.execCommand("insertHTML", !1, e + "&#8203;");
      var t = this.getRange();
      t.setStart(t.endContainer, t.endContainer.length), t.setEnd(t.endContainer, t.endContainer.length), t.collapse(!1)
    }
  }, {
    key: "toUbb", value: function () {
      var e = this.dom.cloneNode(!0), t = e.querySelectorAll("[data-code]"), n = !0, a = !1, r = void 0;
      try {
        for (var o, i = t[Symbol.iterator](); !(n = (o = i.next()).done); n = !0) {
          var c = o.value, s = c.dataset.code;
          c.parentNode.replaceChild(document.createTextNode(s), c)
        }
      } catch (e) {
        a = !0, r = e
      } finally {
        try {
          !n && i.return && i.return()
        } finally {
          if (a) throw r
        }
      }
      return e.innerText
    }
  }]), e
}();